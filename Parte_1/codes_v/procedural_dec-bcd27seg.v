module decoder (i, d);
  
  input [4:0] i;
  output reg[6:0] d;
  
  always @* begin
    case (i)
      5'b00000: d = 7'b1000111;
      5'b00001: d = 7'b1111110;
      5'b00010: d = 7'b1001111;
      5'b00011: d = 7'b0110000;
      5'b00100: d = 7'b0111101;
      5'b00101: d = 7'b1101101;
      5'b00110: d = 7'b1001110;
      5'b00111: d = 7'b1111001;
      
      
      5'b01000: d = 7'b0011111;
      5'b01001: d = 7'b0110011;
      5'b01010: d = 7'b1110111;
      5'b01011: d = 7'b1011011;
      5'b01100: d = 7'b1110011;
      5'b01101: d = 7'b1011111;
      5'b01110: d = 7'b1111111;
      5'b01111: d = 7'b1110000;
      
      
      5'b10000: d = 7'b1110000;
      5'b10001: d = 7'b1111111;
      5'b10010: d = 7'b1011111;
      5'b10011: d = 7'b1110011;
      5'b10100: d = 7'b1011011;
      5'b10101: d = 7'b1110111;
      5'b10110: d = 7'b0110011;
      5'b10111: d = 7'b0011111;
      
      
      5'b11000: d = 7'b1111001;
      5'b11001: d = 7'b1001110;
      5'b10010: d = 7'b1101101;
      5'b11011: d = 7'b0111101;
      5'b11100: d = 7'b0110000;
      5'b11101: d = 7'b1001111;
      5'b11110: d = 7'b1111110;
      5'b11111: d = 7'b1000111;
      default: d = 7'b1111111;
    endcase
  end
endmodule